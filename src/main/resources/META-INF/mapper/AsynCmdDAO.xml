<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.asyncmd.dao.AsynCmdDAO">

    <resultMap type="com.asyncmd.model.AsynCmdDO" id="asynResultMap">
        <result property="cmdId" column="cmd_id" />
        <result property="cmdType" column="cmd_type"/>
        <result property="content" column="content"/>
        <result property="bizId" column="biz_id"/>
        <result property="createHostname" column="create_hostname"/>
        <result property="createIp" column="create_ip"/>
        <result property="createName" column="create_name"/>
        <result property="executeNum" column="execute_num"/>
        <result property="gmtCreate" column="gmt_create"/>
        <result property="gmtModify" column="gmt_modify"/>
        <result property="nextTime" column="next_time"/>
        <result property="status" column="status"/>
        <result property="updateHostname" column="update_hostname"/>
        <result property="updateIp" column="update_ip"/>
    </resultMap>

    <sql id="BASE_LIST">
        cmd_id,cmd_type,content,biz_id,create_hostname,create_ip,create_name,
        execute_num,gmt_create,gmt_modify,next_time,status,update_hostname,update_ip
    </sql>

    
    
    <insert id="saveCmd" parameterType="com.asyncmd.model.AsynCmdDO">
        INSERT INTO asyn_cmd(cmd_id, cmd_type, content,
          biz_id, create_hostname, create_ip, create_name,execute_num,next_time,status,update_hostname,update_ip,gmt_create,gmt_modify)
        VALUES ( #{cmdId}, #{cmdType}, #{content}, #{bizId},
          #{createHostname}, #{createIp}, #{createName}, #{executeNum},#{nextTime},#{status},#{updateHostname},#{updateIp},now(),now())

    </insert>
    <insert id="saveCmdSubTable" parameterType="com.asyncmd.model.AsynCmdDO">
        INSERT INTO asyn_cmd_#{tableIndex} (cmd_id, cmd_type, content,
          biz_id, create_hostname, create_ip, create_name,execute_num,next_time,status,update_hostname,update_ip,gmt_create,gmt_modify)
        VALUES ( #{cmdId}, #{cmdType}, #{content}, #{bizId},
          #{createHostname}, #{createIp}, #{createName}, #{executeNum},#{nextTime},#{status},#{updateHostname},#{updateIp},now(),now())

    </insert>


    <delete id="delCmd" parameterType="string">
        DELETE FROM asyn_cmd WHERE biz_id=#{bizId}
    </delete>

    <delete id="delCmdSubTable" parameterType="string">
        DELETE FROM asyn_cmd_#{tableIndex} WHERE biz_id=#{bizId}
    </delete>

    <update id="updateStatus">
        UPDATE asyn_cmd
        <set>
            status = #{status},
            <if test="executer != null and executer ">
                execute_num = execute_num + 1
            </if>
            <if test="reset != null and reset">
                execute_num = execute_num - 1
            </if>

        </set>
        where
        status = #{whereAsynStatus} and
        biz_id = #{bizId}
    </update>
    <update id="batchUpdateStatus" >
        UPDATE asyn_cmd
        <set>
            status = #{status},
            <if test="executer != null and executer ">
                execute_num = execute_num + 1
            </if>
            <if test="reset != null and reset">
                execute_num = execute_num - 1
            </if>

        </set>
        where
        status = #{whereAsynStatus} and
        biz_id IN
        <foreach collection="bizIds" index="index" item="bizId" open="(" separator="," close=")">
            #{bizId}
        </foreach>
    </update>
    <update id="updateStatusSubTable">
        UPDATE asyn_cmd_#{tableIndex}
        <set>
            status = #{status},
            execute_num = execute_num + 1
        </set>
        where
        status = #{whereAsynStatus} and
        biz_id = #{bizId}
    </update>

    <update id="batchupdateStatusSubTable">
        UPDATE asyn_cmd_#{tableIndex}
        <set>
            status = #{status},
            execute_num = execute_num + 1
        </set>
        where
        status = #{whereAsynStatus} and
        biz_id IN
        <foreach collection="bizIds" index="index" item="bizId" open="(" separator="," close=")">
            #{bizId}
        </foreach>
    </update>

    <select id="queryAsynCmd" resultMap="asynResultMap">
        select
          <include refid="BASE_LIST"/>
        from asyn_cmd
        where
        status = #{status} and next_time &lt;= #{executerTime}
        limit #{limit}
    </select>

    <select id="querySubTableAsynCmd" resultMap="asynResultMap">
        select
        <include refid="BASE_LIST"/>
        from asyn_cmd_#{tableIndex}
        where
        status = #{status} and next_time &lt;= #{executerTime}
        limit #{limit}
    </select>
</mapper>